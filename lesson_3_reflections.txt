When would you want to use a remote repository rather than keeping all your work
local?

    When I want to share my project, or when there are multiple people contributing to
    or developing the project, or when I am contributing an Open source Project myself,
    then I would want to use a remote repository rather than keeping all my work local.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    To pull changes manually is better than automatic update of repository, because many
    times when I am adding a new feature to a software, there can be many commits necessary
    and pushing every commit to the remote Git repository is not neccessary as I might not want
    to include everything in the remote repository as it can be that one single commit may not
    always add the new feature or worse may include disfunctional features.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Fork : When we want a working copy of another person's repository 
           to our GitHub profile, then we use fork.
           It is for GitHub context only. One GitHub repo to our profile.

    Clone: We can clone our github repo to our local machine or from one 
           place in the local machine to another place. 

    Branches: When we want to experiment or debug or add a new feature to 
              our software, then we can use branches. To keep our work
              separated from the working copy in the local or remote machine.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Having a copy of the last known state of the remote stored locally has many
    benefits, some of which are:
      1. It helps you keeping up-to-date with the remote repo and if there were
         any bugs that has been fixed in remote repo, instead of fixing that again
         in our local copy, we will get the bug fixes automatically. (This applies
         if many contributors are working in the project simultanously.)

      2. Same goes for UI changes, new features etc.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Without collaborating via Git and GitHub, I will probably use another version
    control system. If version control system is not allowed, I will have to work 
    with a team in a office or something, where it will be easier for us to constantly
    notify other's about bugs and new features and asking them for their copy of code etc. 
    It will be Hard. 

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
